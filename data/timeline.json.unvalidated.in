{
    "missions": [
        {
            "name": "intro",
            "short_desc": "Down the rabbit hole",
            "long_desc": "Why don't you answer the questions and see where the rabbit hole leads",
            "hint": "Just follow the prompts and search beyond your user account",
            "start_events": [
                "chat::change::where_to_go",
                "chat::change::where_to_go::input",
                "chat::meme::intro::wait-intro"
            ],
            "artifacts": [
                {
                    "name": "artifact::intro::hook",
                    "desc": "Started Endless Coding",
                    "icon": "text-editor-symbolic",
                    "points": 52
                },
                {
                    "name": "artifact::intro::choice_see_cool::challenge",
                    "desc": "Chose to see something cool",
                    "icon": "text-editor-symbolic",
                    "points": 52
                },
                {
                    "name": "artifact::intro::wobble-window",
                    "desc": "Discovered a new way of looking at things",
                    "icon": "text-editor-symbolic",
                    "points": 52
                },
                {
                    "name": "artifact::intro::install-terminal",
                    "icon": "text-editor-symbolic",
                    "desc": "Installed the terminal",
                    "points": 52
                }
            ]
        },
        {
            "name": "bashrc",
            "short_desc": "Your system's configuration",
            "long_desc": "It is time to find out where all those hidden toggles are. Pay attention to the clues that you're given and find out what you need to edit to get ahead.",
            "hint": "A system configuration file is just like any other file, right?",
            "start_events": [
                "bashrc::chat::meme::send_bashrc"
            ],
            "artifacts": [
                {
                    "name": "artifact::openbashrc",
                    "desc": "Looked at your shell configuration",
                    "icon": "text-editor-symbolic",
                    "points": 106
                }
            ]
        },
        {
            "name": "terminalintro",
            "short_desc": "The Terminal. The System",
            "long_desc": "See what lies behind the curtains in the terminal. Complete the exercises in showmehow and learn more about this new world.",
            "hint": "Use 'showmehow' to start learning things",
            "start_events": [
                "terminalintro::setting::showmehow::add-showmehow",
                "listen::terminalintro::showmehow-showmehow",
                "terminalintro::chat::meme::open_terminal",
                "terminalintro::chat::meme::open_terminal::choice"
            ],
            "artifacts": [
                {
                    "name": "artifact::terminalintro::showmehow",
                    "desc": "Learned how to use showmehow",
                    "icon": "text-editor-symbolic",
                    "points": 12
                },
                {
                    "name": "artifact::terminalintro::navigation",
                    "desc": "Navigated filesystem in terminal",
                    "icon": "text-editor-symbolic",
                    "points": 46
                }
            ]
        },
        {
            "name": "terminaltasks",
            "short_desc": "Tricks that you couldn't do anywhere else",
            "long_desc": "Here's where you start your mastery. Start learning tricks that you couldn't possibly do anywhere else and show your friends who's the boss",
            "hint": "Pipes (|) are key here",
            "start_events": [
                "terminaltasks::setting::showmehow::add-textprocessing",
                "chat::meme::terminaltasks::intro",
                "listen::terminaltasks::showmehow-textprocessing"
            ],
            "artifacts": [
                {
                    "name": "artifact::terminaltasks::textprocessing",
                    "desc": "Processed text in the terminal",
                    "icon": "text-editor-symbolic",
                    "points": 120
                },
                {
                    "name": "artifact::terminaltasks::settings",
                    "desc": "Changed settings in the terminal",
                    "icon": "text-editor-symbolic",
                    "points": 141
                }
            ]
        },
        {
            "name": "processing",
            "short_desc": "Create beautiful drawings with processing",
            "long_desc": "You can create some drawings with code using the processing app",
            "hint": "If you get stuck, you can always ask for a sample file",
            "start_events": [
                "chat::meme::processing::ask_familiar_processing",
                "chat::meme::processing::ask_familiar_processing::response"
            ],
            "artifacts": [
                {
                    "name": "artifact::processing::launched_processing",
                    "desc": "Launched processing",
                    "icon": "text-editor-symbolic",
                    "points": 131
                }
            ]
        },
        {
            "name": "yoursystem",
            "short_desc": "Uncover the wraps on your filesystem",
            "long_desc": "Look in all the nooks and crannies in your system",
            "hint": "Try starting with / and going down",
            "start_events": [
                "chat::meme::yoursystem::find_etc",
                "chat::meme::yoursystem::find_etc::response"
            ],
            "artifacts": [
                {
                    "name": "artifact::yoursystem::found_etc",
                    "desc": "Found out about /etc",
                    "icon": "text-editor-symbolic",
                    "points": 131
                },
                {
                    "name": "artifact::yoursystem::found_logs",
                    "desc": "Found out about where logs are stored",
                    "icon": "text-editor-symbolic",
                    "points": 124
                },
                {
                    "name": "artifact::yoursystem::found_configs",
                    "desc": "Found out about where configuration is stored",
                    "icon": "text-editor-symbolic",
                    "points": 200
                }
            ]
        },
        {
            "name": "python",
            "short_desc": "Get started with Python",
            "long_desc": "Get started with Python",
            "hint": "Remember to balance your brackets!",
            "start_events": [
                "python::setting::showmehow::add-python",
                "chat::meme::showmehow_python",
                "listen::showmehow_python::add_numbers"
            ],
            "artifacts": [
                {
                    "name": "artifact::python::add_numbers",
                    "desc": "Simple arithmetic with python",
                    "icon": "text-editor-symbolic",
                    "points": 10
                },
                {
                    "name": "artifact::python::print_string",
                    "icon": "text-editor-symbolic",
                    "desc": "Wrote your first python program",
                    "points": 10
                },
                {
                    "name": "artifact::python::string_format",
                    "desc": "Formatted a string with python",
                    "icon": "text-editor-symbolic",
                    "points": 30
                },
                {
                    "name": "artifact::python::split_string",
                    "desc": "Turned a string into a list with python",
                    "icon": "text-editor-symbolic",
                    "points": 64
                },
                {
                    "name": "artifact::python::join_string",
                    "desc": "Created a string out of a list with python",
                    "icon": "text-editor-symbolic",
                    "points": 32
                }
            ]
        },
        {
            "name": "python_functions",
            "short_desc": "Organise your code into functions",
            "long_desc": "Use functions to create composable programs and encourage reusable code",
            "hint": "Walk through what needs to be done in your head and see if you can order the functions",
            "start_events": [
                "chat::meme::python_functions::intro",
                "chat::meme::python_functions::enter_code",
                "chat::meme::python_functions::intro::attachment",
                "chat::meme::python_functions::challenge"
            ],
            "artifacts": [
                {
                    "name": "artifact::python_functions::found_answer",
                    "desc": "Solved the python functions problem",
                    "icon": "text-editor-symbolic",
                    "points": 20
                }
            ]
        },
        {
            "name": "python_lists",
            "short_desc": "Data Structures in Python",
            "long_desc": "Organise data in your programs and solve the puzzles by using functional structures",
            "hint": "Think of lists as big chunks of data. If you apply the same operation to everything, how does the chunk change?",
            "start_events": [
                "python::setting::showmehow::add-python-lists",
                "chat::meme::python_lists::intro",
                "listen::python_lists::convert_list"
            ],
            "artifacts": [
                {
                    "name": "artifact::python::convert_list",
                    "desc": "Used list comprehensions to map a list",
                    "icon": "text-editor-symbolic",
                    "points": 20
                },
                {
                    "name": "artifact::python::filter_list",
                    "desc": "Used list comprehensions to filter a list",
                    "icon": "text-editor-symbolic",
                    "points": 50
                },
                {
                    "name": "artifact::python::dict_comprehension",
                    "desc": "Built environment variable map",
                    "icon": "text-editor-symbolic",
                    "points": 30
                }
            ]
        },
        {
            "name": "python_classes",
            "short_desc": "Object Oriented Programming",
            "long_desc": "Use clases and objects to learn the foundations of programming for a user interface",
            "hint": "Object Oriented Programming is meant to model the real world. Think about how this would work in reality",
            "start_events": [
                "chat::meme::python_classes::intro",
                "chat::meme::python_classes::enter_code",
                "chat::meme::python_classes::intro::attachment",
                "chat::meme::python_classes::challenge"
            ],
            "artifacts": [
                {
                    "name": "artifact::python_classes::found_answer",
                    "desc": "Solved the Object-Orientated python problem",
                    "icon": "text-editor-symbolic",
                    "points": 20
                }
            ]
        },
        {
            "name": "showmehow_python_gi",
            "short_desc": "Accessing System Functionality with Python",
            "long_desc": "Use the GObject-Introspection Framework on your system to access all sorts of system level functionality.",
            "hint": "As soon as you import something with GObject-Introspection, you can use it like anything else",
            "start_events": [
                "python::setting::showmehow::add-python-gi",
                "chat::meme::showmehow_python_gi::intro",
                "listen::showmehow_python_gi::create_gi_binding"
            ],
            "artifacts": [
                {
                    "name": "artifact::python::create_gi_binding",
                    "desc": "Created GObject-Introspection binding with python",
                    "icon": "text-editor-symbolic",
                    "points": 10
                },
                {
                    "name": "artifact::python::instantiate_gi_class",
                    "desc": "Instantiated GObject-Introspection bound class",
                    "icon": "text-editor-symbolic",
                    "points": 10
                },
                {
                    "name": "artifact::python::send_gnotification",
                    "desc": "Sent system notifications with python",
                    "icon": "text-editor-symbolic",
                    "points": 10
                }
            ]
        }
    ],
    "start": {
        "initial_event": "start-mission::intro"
    },
    "events": [
        {
            "name": "start-mission::intro",
            "type": "start-mission",
            "data": {
                "name": "intro"
            }
        },
        {
            "name": "chat::meme::intro::wait-intro",
            "type": "wait-for",
            "data": {
                "timeout": 100000,
                "then": [
                    "chat::meme::intro::hook",
                    "chat::meme::intro::hook::challenge"
                ]
            }
        },
        {
            "name": "chat::meme::intro::hook",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Hey you"
            }
        },
        {
            "name": "chat::meme::intro::hook::challenge",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "intro::hook"
                    }
                },
                "responses": {
                    "success": [
                        "chat::meme::intro::hook::artifact",
                        "chat::meme::intro::choice_see_cool",
                        "chat::meme::intro::choice_see_cool::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::intro::hook::artifact",
            "type": "register-artifact",
            "data": {
                "name": "artifact::intro::hook"
            }
        },
        {
            "name": "chat::meme::intro::choice_see_cool",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Wanna see something cool?"
            }
        },
        {
            "name": "chat::meme::intro::choice_see_cool::challenge",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "yes": {
                                "text": "Sure, why not"
                            },
                            "no": {
                                "text": "Go away"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::meme::intro::choice_see_cool::artifact",
                        "chat::meme::intro::tell-goog-key",
                        "chat::goog::intro::tell-goog-key",
                        "chat::dank::intro::tell-goog-key",
                        "event::intro::leave-key-behind",
                        "chat::goog::intro::tell-goog-key::input"
                    ],
                    "no": [
                        "chat::meme::intro::choice_see_cool::again",
                        "chat::meme::intro::choice_see_cool::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::intro::choice_see_cool::artifact",
            "type": "register-artifact",
            "data": {
                "name": "artifact::intro::choice_see_cool::challenge"
            }
        },
        {
            "name": "chat::meme::intro::choice_see_cool::again",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Sure you don't?"
            }
        },
        {
            "name": "chat::meme::intro::tell-goog-key",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "So here's the thing. Someone left a key behind and I heard that GOOG will unlock the system if you just tell it a password. All you have to do is find it ..."
            }
        },
        {
            "name": "chat::goog::intro::tell-goog-key",
            "type": "chat-actor",
            "data": {
                "actor": "GOOG",
                "message": "Yeah there's no way that's going to happen. You tell me the password and I'll just ignore you! I can do what I want!"
            }
        },
        {
            "name": "chat::goog::intro::tell-goog-key::again",
            "type": "chat-actor",
            "data": {
                "actor": "GOOG",
                "message": "Wrong! You'll never make me open this thing up"
            }
        },
        {
            "name": "chat::goog::intro::goog-receive-key::segfault",
            "type": "chat-actor",
            "data": {
                "actor": "GOOG",
                "message": "Whatever. That's the right key but I'll just call a method to ignore you... Segmentation Fault (Signal 9)."
            }
        },
        {
            "name": "chat::goog::intro::goog-receive-key::wait-name-error",
            "type": "wait-for",
            "data": {
                "timeout": 5000,
                "then": [
                    "chat::goog::intro::goog-receive-key::name-error",
                    "chat::goog::intro::goog-receive-key::wait-give-in"
                ]
            }
        },
        {
            "name": "chat::goog::intro::goog-receive-key::wait-give-in",
            "type": "wait-for",
            "data": {
                "timeout": 5000,
                "then": [
                    "chat::goog::intro::goog-receive-key::give-in",
                    "chat::meme::intro::enable-wobbly-windows::comment",
                    "event::intro::enable-wobbly-windows",
                    "listen::intro::wobble-window"
                ]
            }
        },
        {
            "name": "chat::goog::intro::goog-receive-key::name-error",
            "type": "chat-actor",
            "data": {
                "actor": "GOOG",
                "message": "Uh, let me try again. There's a function around here to just pretend this never happened. NameError."
            }
        },
        {
            "name": "chat::goog::intro::goog-receive-key::give-in",
            "type": "chat-actor",
            "data": {
                "actor": "GOOG",
                "message": "You've gotta be kidding me! Is there no other way?!"
            }
        },
        {
            "name": "chat::goog::intro::tell-goog-key::input",
            "type": "input-user",
            "data": {
                "actor": "GOOG",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "intro::goog_key"
                    }
                },
                "responses": {
                    "failure": [
                        "chat::goog::intro::tell-goog-key::again",
                        "chat::goog::intro::tell-goog-key::input"
                    ],
                    "success": [
                        "chat::goog::intro::goog-receive-key::segfault",
                        "chat::goog::intro::goog-receive-key::wait-name-error"
                    ]
                }
            }
        },
        {
            "name": "chat::dank::intro::tell-goog-key",
            "type": "chat-actor",
            "data": {
                "actor": "DANK",
                "message": "DANK here! I found something in a place all of us have access to! Maybe you should come take a look!"
            }
        },
        {
            "name": "event::intro::leave-key-behind",
            "type": "copy-file",
            "data": {
                "source": "sw.txt",
                "target": "/home/shared/secret.txt"
            }
        },
        {
            "name": "chat::meme::intro::enable-wobbly-windows::comment",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "SYSTEM UNLOCKED! Let's have some fun! I turned this window into jello - check it out!"
            }
        },
        {
            "name": "event::intro::enable-wobbly-windows",
            "type": "change-setting",
            "data": {
                "schema": "org.gnome.shell",
                "key": "wobbly-effect",
                "variant_type": "b",
                "value": true
            }
        },
        {
            "name": "event::intro::disable-wobbly-windows",
            "type": "change-setting",
            "data": {
                "schema": "org.gnome.shell",
                "key": "wobbly-effect",
                "variant_type": "b",
                "value": false
            }
        },
        {
            "name": "listen::intro::wobble-window",
            "type": "listen-event",
            "data": {
                "name": "move-window",
                "received": [
                    "listen::intro::wobble-window::artifact",
                    "chat::meme::intro::stop-wobble-window-comment",
                    "chat::fruit::intro::stop-wobble-window-comment",
                    "chat::dank::intro::stop-wobble-window-comment",
                    "chat::goog::intro::stop-wobble-window-comment",
                    "listen::intro::stop-wobble-window"
                ]
            }
        },
        {
            "name": "chat::meme::intro::stop-wobble-window-comment",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Aaaack! Stop it!"
            }
        },
        {
            "name": "chat::fruit::intro::stop-wobble-window-comment",
            "type": "chat-actor",
            "data": {
                "actor": "FRUIT",
                "message": "Woah! What on earth is going on here?"
            }
        },
        {
            "name": "chat::goog::intro::stop-wobble-window-comment",
            "type": "chat-actor",
            "data": {
                "actor": "GOOG",
                "message": "What the?!?!"
            }
        },
        {
            "name": "chat::dank::intro::stop-wobble-window-comment",
            "type": "chat-actor",
            "data": {
                "actor": "DANK",
                "message": "Abort! Abort!"
            }
        },
        {
            "name": "listen::intro::stop-wobble-window",
            "type": "listen-event",
            "data": {
                "name": "stop-moving-windows",
                "received": [
                    "chat::meme::intro::wobble-windows-comment",
                    "event::intro::disable-wobbly-windows",
                    "chat::meme::intro::install_programming",
                    "chat::dank::intro::new_splash_paint",
                    "chat::dank::intro::new_splash_paint::input",
                    "chat::fruit::intro::install_programming::comment",
                    "chat::meme::intro::install_programming::challenge"
                ]
            }
        },
        {
            "name": "listen::intro::wobble-window::artifact",
            "type": "register-artifact",
            "data": {
                "name": "artifact::intro::wobble-window"
            }
        },
        {
            "name": "chat::meme::intro::wobble-windows-comment",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Things are not as they seem around here"
            }
        },
        {
            "name": "chat::dank::intro::new_splash_paint",
            "type": "chat-actor",
            "data": {
                "actor": "DANK",
                "message": "Here's something cool I found! Why don't you try 'newsplash' and see what the paint bucket changes this time?"
            }
        },
        {
            "name": "chat::dank::intro::new_splash_paint::again",
            "type": "chat-actor",
            "data": {
                "actor": "DANK",
                "message": "We want a NEW splash, not an old one!"
            }
        },
        {
            "name": "chat::dank::intro::new_splash_paint::complete",
            "type": "chat-actor",
            "data": {
                "actor": "DANK",
                "message": "How is that for a difference?"
            }
        },
        {
            "name": "chat::dank::intro::new_splash_paint::input",
            "type": "input-user",
            "data": {
                "actor": "DANK",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "intro::change_background_pic"
                    }
                },
                "responses": {
                    "success": [
                        "event::intro::new_splash_paint::background",
                        "chat::dank::intro::new_splash_paint::complete"
                    ],
                    "failure": [
                        "chat::dank::intro::new_splash_paint::again",
                        "chat::dank::intro::new_splash_paint::input"
                    ]
                }
            }
        },
        {
            "name": "event::intro::new_splash_paint::background",
            "type": "change-setting",
            "data": {
                "schema": "org.gnome.desktop.background",
                "key": "picture-uri",
                "variant_type": "s",
                "value": {
                    "type": "internal-file-uri",
                    "value": "background_pic.jpg"
                }
            }
        },
        {
            "name": "chat::meme::intro::install_programming",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "You think I can teach you something cool? Try this: install-terminal"
            }
        },
        {
            "name": "chat::meme::intro::install_programming::challenge",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "intro::install_programming_hook"
                    }
                },
                "responses": {
                    "success": [
                        "chat::meme::intro::install-terminal::artifact",
                        "event::meme::intro::install-terminal::insert-terminal-icon",
                        "chat::meme::intro::intro-complete",
                        "chat::goog::intro::install_programming::comment",
                        "intro::start-bashrc-mission"
                    ],
                    "failure": [
                        "chat::meme::intro::install_programming::again",
                        "chat::fruit::intro::install_programming::again",
                        "chat::meme::intro::install_programming::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::intro::install_programming::again",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "'install-terminal' EXACTLY. I haven't got all day!"
            }
        },
        {
            "name": "chat::fruit::intro::install_programming::again",
            "type": "chat-actor",
            "data": {
                "actor": "FRUIT",
                "message": "That's it, step away from that keyboard"
            }
        },
        {
            "name": "chat::fruit::intro::install_programming::comment",
            "type": "chat-actor",
            "data": {
                "actor": "FRUIT",
                "message": "You don't want to do this. Stay in that walled garden!"
            }
        },
        {
            "name": "chat::goog::intro::install_programming::comment",
            "type": "chat-actor",
            "data": {
                "actor": "GOOG",
                "message": "This really isn't going to be pretty..."
            }
        },
        {
            "name": "chat::meme::intro::install-terminal::artifact",
            "type": "register-artifact",
            "data": {
                "name": "artifact::intro::install-terminal"
            }
        },
        {
            "name": "event::meme::intro::install-terminal::insert-terminal-icon",
            "type": "modify-app-grid",
            "data": {
                "action": "add-app",
                "app": "org.gnome.Terminal.desktop"
            }
        },
        {
            "name": "chat::meme::intro::intro-complete",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Buckle up Dorothy, because Kansas is going bye-bye!\nSee you in the 'Coding Fun' app on your desktop!"
            }
        },
        {
            "name": "intro::start-bashrc-mission",
            "type": "start-mission",
            "data": {
                "name": "bashrc"
            }
        },
        {
            "name": "bashrc::chat::meme::send_bashrc",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Your Shell's Configuration",
                    "path": "~/.bashrc",
                    "open_event": [
                        "bashrc::register_artifact",
                        "bashrc::chat::meme::open_bashrc",
                        "bashrc::start-mission::terminalintro"
                    ]
                }
            }
        },
        {
            "name": "bashrc::register_artifact",
            "type": "register-artifact",
            "data": {
                "name": "artifact::openbashrc"
            }
        },
        {
            "name": "bashrc::chat::meme::open_bashrc",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "With great powers come great responsibility."
            }
        },
        {
            "name": "bashrc::start-mission::terminalintro",
            "type": "start-mission",
            "data": {
                "name": "terminalintro"
            }
        },
        {
            "name": "terminalintro::setting::showmehow::add-showmehow",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["showmehow", "joke", "playsong", "readfile", "breakit", "navigation"]
                }
            }
        },
        {
            "name": "terminalintro::chat::meme::open_terminal",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Go on, click that icon. I know you want to."
            }
        },
        {
            "name": "terminalintro::chat::meme::open_terminal::choice",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "where": {
                                "text": "Where is it?"
                            },
                            "afraid": {
                                "text": "I'm afraid to"
                            }
                        }
                    }
                },
                "responses": {
                    "where": [
                        "terminalintro::chat::meme::open_terminal::where"
                    ],
                    "afraid": [
                        "terminalintro::chat::meme::open_terminal::afraid"
                    ]
                }
            }
        },
        {
            "name": "terminalintro::chat::meme::open_terminal::where",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Its on your desktop!"
            }
        },
        {
            "name": "terminalintro::chat::meme::open_terminal::afraid",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "I promise nothing bad will happen!"
            }
        },
        {
            "name": "listen::terminalintro::showmehow-showmehow",
            "type": "listen-event",
            "data": {
                "name": "showmehow-showmehow",
                "received": [
                    "terminalintro::chat::meme::open_terminal::showmehow-navigation",
                    "listen::terminalintro::showmehow-navigation",
                    "artifact::terminalintro::showmehow"
                ]
            }
        },
        {
            "name": "artifact::terminalintro::showmehow",
            "type": "register-artifact",
            "data": {
                "name": "artifact::terminalintro::showmehow"
            }
        },
        {
            "name": "terminalintro::chat::meme::open_terminal::showmehow-navigation",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Now that you've learned how to use showmehow, why not try the navigation lesson?"
            }
        },
        {
            "name": "listen::terminalintro::showmehow-navigation",
            "type": "listen-event",
            "data": {
                "name": "showmehow-navigation",
                "received": [
                    "terminalintro::start-mission::terminaltasks"
                ]
            }
        },
        {
            "name": "listen::terminalintro::showmehow-navigation",
            "type": "listen-event",
            "data": {
                "name": "showmehow-navigation",
                "received": [
                    "terminalintro::start-mission::terminaltasks"
                ]
            }
        },
        {
            "name": "terminalintro::start-mission::terminaltasks",
            "type": "start-mission",
            "data": {
                "name": "terminaltasks"
            }
        },
        {
            "name": "terminaltasks::setting::showmehow::add-textprocessing",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["text"]
                }
            }
        },
        {
            "name": "chat::meme::terminaltasks::intro",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Now that you're working your way around terminal, let's try some stuff that you can't do anywhere else."
            }
        },
        {
            "name": "listen::terminaltasks::showmehow-textprocessing",
            "type": "listen-event",
            "data": {
                "name": "showmehow-textprocessing",
                "received": [
                    "chat::meme::terminaltasks::ps",
                    "terminaltasks::setting::showmehow::add-ps",
                    "listen::terminaltasks::showmehow-ps"
                ]
            }
        },
        {
            "name": "chat::meme::terminaltasks::ps",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "You can also see what is going on in your system using the terminal. Try the 'ps' lesson."
            }
        },
        {
            "name": "terminaltasks::setting::showmehow::add-ps",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["ps"]
                }
            }
        },
        {
            "name": "listen::terminaltasks::showmehow-ps",
            "type": "listen-event",
            "data": {
                "name": "showmehow-ps",
                "received": [
                    "chat::meme::terminaltasks::settings",
                    "terminaltasks::setting::showmehow::add-settings",
                    "listen::terminaltasks::showmehow-settings"
                ]
            }
        },
        
        {
            "name": "chat::meme::terminaltasks::settings",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "With the terminal you can also change settings on your system. Check out the 'settings' lesson on showmehow."
            }
        },
        {
            "name": "terminaltasks::setting::showmehow::add-settings",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                 "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["changesetting"]
                }
            }
        },
        {
            "name": "listen::terminaltasks::showmehow-settings",
            "type": "listen-event",
            "data": {
                "name": "showmehow-settings",
                "received": [
                    "terminaltasks::start-mission::processing"
                ]
            }
        },
        {
            "name": "terminaltasks::start-mission::processing",
            "type": "start-mission",
            "data": {
                "name": "processing"
            }
        },
        {
            "name": "chat::meme::processing::ask_familiar_processing",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "I'm your Processing tutor. This is a great tool for creating interactive drawings with code. Are you already familiar with Processing?"
            }
        },
        {
            "name": "chat::meme::processing::ask_familiar_processing::response",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "yes": {
                                "text": "Yes"
                            },
                            "no": {
                                "text": "No"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::meme::processing::chat_advanced_tutorial",
                        "chat::meme::processing::code_martian",
                        "chat::meme::processing::chat_martian_example",
                        "chat::meme::processing::show_martian_example"
                    ],
                    "no": [
                        "chat::meme::processing::chat_beginner_tutorial",
                        "chat::meme::processing::click_icon"
                    ]
                }
            }
        },
        {
          "name": "chat::meme::processing::chat_beginner_tutorial",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "Great, let's get started! Click the icon below to start Sketch."
          }
        },
        {
            "name": "chat::meme::processing::click_icon",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Processing",
                    "path": "processing.desktop",
                    "open_event": [
                        "chat::meme::processing::chat_show_interface",
                        "chat::meme::processing::show_processing_interface"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_show_interface",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "The image below explains the main interface areas in the app."
            }
        },
        {
            "name": "chat::meme::processing::show_processing_interface",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Processing interface",
                    "path": "processing.png",
                    "open_event": [
                        "chat::meme::processing::chat_first_code",
                        "chat::meme::processing::code_print_console",
                        "chat::meme::processing::chat_explain_comments",
                        "chat::meme::processing::chat_check_print",
                        "chat::meme::processing::chat_check_print::response"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_first_code",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Now, let's write our first code. In the Text editor, type the code below, and then click on the play button to run your code."
            }
        },
        {
            "name": "chat::meme::processing::code_print_console",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "<span font_family='monospace'>print(\"Hello, Mars!\");   // prints a message in the Console</span>"
            }
        },
        {
            "name": "chat::meme::processing::chat_explain_comments",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "By the way, the text that comes after \"//\" is called a \"comment\" because it describes what that piece of code actually does. You can copy that too, but it’s not necessary for the code to run properly."
            }
        },
        {
            "name": "chat::meme::processing::chat_check_print",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "After you hit play, the message \"Hello, Mars\" should appear in the Console. Did you see the message?"
            }
        },
        {
            "name": "chat::meme::processing::chat_check_print::response",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "yes": {
                                "text": "Yes"
                            },
                            "no": {
                                "text": "No"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::meme::processing::chat_confirm_print",
                        "chat::meme::processing::chat_line_code",
                        "chat::meme::processing::code_line",
                        "chat::meme::processing::chat_line_example",
                        "chat::meme::processing::show_line_example",
                        "chat::meme::processing::chat_check_line",
                        "chat::meme::processing::chat_check_line::response"
                    ],
                    "no": [
                        "chat::meme::processing::chat_retry_print",
                        "chat::meme::processing::chat_check_print",
                        "chat::meme::processing::chat_check_print::response"
                    ]
                }
            }
        },
        {
          "name": "chat::meme::processing::chat_retry_print",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "Hm.. make sure you type the exact code below in the Text editor field, and then press play. Don't forget the semicolon!"
          }
        },
        {
          "name": "chat::meme::processing::chat_confirm_print",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "Great! Now let's start drawing. How about we start with a simple line?"
          }
        },
        {
          "name": "chat::meme::processing::chat_line_code",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "Type the below code into the Text editor, and then press play."
          }
        },
        {
            "name": "chat::meme::processing::code_line",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "<span font_family='monospace'>size(200,200);   // sets size of the window \n line(90,150,80,160);   // draws a line \n \n print(\"Hello, Mars!\");   // prints a message in the Console</span>"
            }
        },
        {
          "name": "chat::meme::processing::chat_line_example",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "After you hit play, you should see something like this:"
          }
        },
        {
            "name": "chat::meme::processing::show_line_example",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Screenshot of line in Processing",
                    "path": "line.png",
                    "open_event": [
                        "chat::meme::processing::chat_check_line",
                        "chat::meme::processing::chat_check_line::response"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_check_line",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Did your line appear in the Sketch window?"
            }
        },
        {
            "name": "chat::meme::processing::chat_check_line::response",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "yes": {
                                "text": "Yes"
                            },
                            "no": {
                                "text": "No"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::meme::processing::chat_confirm_line",
                        "chat::meme::processing::chat_explain_parameters",
                        "chat::meme::processing::show_line_parameters",
                        "chat::meme::processing::chat_tweak_line_parameters"
                    ],
                    "no": [
                        "chat::meme::processing::chat_retry_line",
                        "chat::meme::processing::chat_check_line",
                        "chat::meme::processing::show_sketch_code",
                        "chat::meme::processing::chat_check_line::response",
                        "chat::meme::processing::chat_move_to_circle",
                        "chat::meme::processing::chat_move_to_circle::response"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_retry_line",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Hm.. click the below icon to open a file containing the completed code. Compare the two to see if you missed something!"
            }
        },
        {
            "name": "chat::meme::processing::show_sketch_code",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "The completed code of the line",
                    "path": "line.pde"
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_confirm_line",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "That's a nice line!"
            }
        },
        {
            "name": "chat::meme::processing::chat_explain_parameters",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "The numbers—also called \"parameters\"—in the \"line()\" code tell Processing exactly where to draw the line."
            }
        },
        {
            "name": "chat::meme::processing::show_line_parameters",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Visual explanation of line parameters in Sketch",
                    "path": "line_key.png"
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_tweak_line_parameters",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Feel free to tweak the line's parameters, press play, and see what happens! (Be sure to keep the values under 200 or else the line will go off screen.)"
            }
        },
        {
            "name": "chat::meme::processing::chat_move_to_circle",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Click here when you're ready to move on."
            }
        },
        {
            "name": "chat::meme::processing::chat_move_to_circle::response",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "yes": {
                                "text": "Ready"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::meme::processing::chat_circle_code",
                        "chat::meme::processing::code_circle",
                        "chat::meme::processing::chat_circle_example",
                        "chat::meme::processing::show_circle_example"
                        
                    ]
                }
            }
        },
        {
          "name": "chat::meme::processing::chat_circle_code",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "Cool! Now let's try something new. Add the below code to your Text editor to draw a circle. The highlighted code shows the new code we're adding."
          }
        },
        {
            "name": "chat::meme::processing::code_circle",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "<span font_family='monospace'>size(200,200);   // sets size of the window \n line(90,150,80,160);   // draws a line \n ellipse(100,70,60,60);   // draws a circle \n \n print(\"Hello, Mars!\");   // prints a message in the Console</span>"
            }
        },
        {
          "name": "chat::meme::processing::chat_circle_example",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "After you hit play, you should see something like this:"
          }
        },
        {
            "name": "chat::meme::processing::show_circle_example",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Screenshot of circle in Processing",
                    "path": "circle.png",
                    "open_event": [
                        "chat::meme::processing::chat_check_circle",
                        "chat::meme::processing::chat_check_circle::response"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_check_circle",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Did your circle appear in the Sketch window?"
            }
        },
        {
            "name": "chat::meme::processing::chat_check_circle::response",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "yes": {
                                "text": "Yes"
                            },
                            "no": {
                                "text": "No"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::meme::processing::chat_confirm_circle",
                        "chat::meme::processing::chat_explain_circle",
                        "chat::meme::processing::show_circle_parameters",
                        "chat::meme::processing::chat_tweak_circle_parameters",
                        "chat::meme::processing::chat_move_to_advanced",
                        "chat::meme::processing::chat_move_to_advanced::response"
                    ],
                    "no": [
                        "chat::meme::processing::chat_retry_circle",
                        "chat::meme::processing::chat_check_circle",
                        "chat::meme::processing::chat_check_circle::response"
                    ]
                }
            }
        },
        {
          "name": "chat::meme::processing::chat_retry_circle",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "Hm.. make sure you type the exact code below in the Text editor field, and then press play. Double check your work!"
          }
        },
        {
          "name": "chat::meme::processing::chat_confirm_circle",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "A perfect circle!"
          }
        },
        {
          "name": "chat::meme::processing::chat_explain_circle",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "The \"ellipse()\" line of code tells Processing to draw an ellipse (or oval) with the parameters we chose:"
          }
        },
        {
            "name": "chat::meme::processing::show_circle_parameters",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Visual explanation of circle parameters in Sketch",
                    "path": "circle_key.png"
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_tweak_circle_parameters",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Again, feel free to experiment by changing those parameters and pressing play to see what happens!"
            }
        },
        {
            "name": "chat::meme::processing::chat_move_to_advanced",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Click here when you're ready to move on."
            }
        },
        {
            "name": "chat::meme::processing::chat_move_to_advanced::response",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "yes": {
                                "text": "Ready"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::meme::processing::chat_advanced_tutorial",
                        "chat::meme::processing::code_martian",
                        "chat::meme::processing::chat_martian_example",
                        "chat::meme::processing::show_martian_example"
                    ]
                }
            }
        },
        {
          "name": "chat::meme::processing::chat_advanced_tutorial",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "With a little practice and creativity, you can use Processing to turn simple lines and circles into more complex works of art. To see an \"otherwordly\" example, add these lines to your code and press play."
          }
        },
        {
            "name": "chat::meme::processing::code_martian",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "<span font_family='monospace'>size(200,200);   // sets size of the window \n rectMode(CENTER);   // draws everything from center \n rect(100,100,20,100);   // draws the body \n ellipse(100,70,60,60);   // draws the head \n ellipse(81,70,16,32);   // draws the left eye \n ellipse(119,70,16,32);   // draws the right eye \n line(90,150,80,160);   // draws the left leg \n line(110,150,120,160);   // draws the right leg \n \n print(\"Hello, Mars!\");   // prints a message in the Console</span>"
            }
        },
        {
          "name": "chat::meme::processing::chat_martian_example",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "After you hit play, you should see something like this:"
          }
        },
        {
            "name": "chat::meme::processing::show_martian_example",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Screenshot of martian in Processing",
                    "path": "martian.png",
                    "open_event": [
                        "chat::meme::processing::chat_check_martian",
                        "chat::meme::processing::show_martian_code",
                        "chat::meme::processing::chat_confirm_martian",
                        "chat::meme::processing::chat_move_to_colors",
                        "chat::meme::processing::chat_move_to_colors::response"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_check_martian",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "If you don't see the Martian, click the below icon to open a file containing the completed code. See if you can spot the difference!"
            }
        },
        {
            "name": "chat::meme::processing::show_martian_code",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "The completed code of the Martian",
                    "path": "martian.pde"
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_confirm_martian",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Thankfully, it looks like a friendly alien! But we're not done yet..."
            }
        },
        {
            "name": "chat::meme::processing::chat_move_to_colors",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Click the button when you're ready to continue."
            }
        },
        {
            "name": "chat::meme::processing::chat_move_to_colors::response",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "yes": {
                                "text": "Ready"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::meme::processing::chat_color_code",
                        "chat::meme::processing::code_color_martian",
                        "chat::meme::processing::chat_explain_code_reading",
                        "chat::meme::processing::chat_martian_colors_example",
                        "chat::meme::processing::show_martian_colors_example"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_color_code",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Color in the Martian by adding the highlighted code belowe and pressing play."
            }
        },
        {
            "name": "chat::meme::processing::code_color_martian",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "<span font_family='monospace'>size(200,200);   // sets size of the window \n rectMode(CENTER);   // draws everything from center \n background(100);   // colors the background dark gray \n fill(0,200,0);   // colors the Martian's body green \n rect(100,100,20,100);   // draws the body \n ellipse(100,70,60,60);   // draws the head \n fill(0);   // colors the Martian's eyes black \n ellipse(81,70,16,32);   // draws the left eye \n ellipse(119,70,16,32);   // draws the right eye \n line(90,150,80,160);   // draws the left leg \n line(110,150,120,160);   // draws the right leg \n \n print(\"Hello, Mars!\");   // prints a message in the Console</span>"
            }
        },
        {
            "name": "chat::meme::processing::chat_explain_code_reading",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Make sure that your lines of code appear in exactly the same order as they do in the example. Processing reads your code from top to bottom, so adjusting the order will change your Martian's appearance."
            }
        },
        {
          "name": "chat::meme::processing::chat_martian_colors_example",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "If done correctly, your Martian should look like this:"
          }
        },
        {
            "name": "chat::meme::processing::show_martian_colors_example",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Screenshot of colored Martian in Processing",
                    "path": "martian_colors.png",
                    "open_event": [
                        "chat::meme::processing::chat_check_martian_colors",
                        "chat::meme::processing::chat_check_martian_colors::response"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::processing::chat_check_martian_colors",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Did your Martian appear with a green body and black eyes in the Sketch window?"
            }
        },
        {
            "name": "chat::meme::processing::chat_check_martian_colors::response",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "yes": {
                                "text": "Yes"
                            },
                            "no": {
                                "text": "No"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::meme::processing::chat_confirm_martian_colors",
                        "chat::meme::processing::chat_explain_martian_grayscale",
                        "chat::meme::processing::code_grayscale",
                        "chat::meme::processing::chat_explain_martian_rgb",
                        "chat::meme::processing::code_rgb",
                        "chat::meme::processing::chat_tweak_color",
                        "chat::meme::processing::chat_confirm_martian_colors",
                        "chat::meme::processing::chat_move_to_stroke",
                        "chat::meme::processing::chat_move_to_stroke::response"
                    ],
                    "no": [
                        "chat::meme::processing::chat_retry_martian_colors",
                        "chat::meme::processing::chat_check_martian_colors",
                        "chat::meme::processing::chat_check_martian_colors::response"
                    ]
                }
            }
        },
        {
          "name": "chat::meme::processing::chat_retry_martian_colors",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "Hm.. why don't you try again? Make sure that your lines of code appear in exactly the same order as below. Processing reads your code from top to bottom, so adjusting the order will change the look of your Martian. Type the exact code below in the Text editor field, and then press play."
          }
        },
        {
          "name": "chat::meme::processing::chat_confirm_martian_colors",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "Now that's a Martian! So what's going on here?"
          }
        },
        {
          "name": "chat::meme::processing::chat_explain_martian_grayscale",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "When adding color with \"background()\" and \"fill()\", you can either do it in grayscale mode or in RGB (red-green-blue) mode. In grayscale mode, you simply pick a number between 0 (black) and 255 (white), like you did with the background and the eyes:"
          }
        },
        {
            "name": "chat::meme::processing::code_grayscale",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "<span font_family='monospace'>background(100);   // colors the background dark gray \n fill(0);   // colors the Martian's eyes black \n </span>"
            }
        },
        {
          "name": "chat::meme::processing::chat_explain_martian_rgb",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "In RGB mode, each parameter is a value from 0 to 255. So, in our example, we selected \"0\" for red, \"200\" for green, and \"0\" for blue. That's how we colored the Martian's body green!"
          }
        },
        {
            "name": "chat::meme::processing::code_rgb",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "<span font_family='monospace'>fill(0,200,0);   // colors the Martian's body green</span>"
            }
        },
        {
          "name": "chat::meme::processing::chat_tweak_color",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "Feel free to experiment with changing your Martian's colors by changing those parameters in your code! Here are some tips for creating certain colors in RGB mode: \n Red + Green = Yellow \n Red + Blue = Purple \n Green + Blue = Cyan"
          }
        },
        {
          "name": "chat::meme::processing::chat_confirm_martian_colors",
          "type": "chat-actor",
          "data": {
            "actor": "MEME",
            "message": "Now that's a Martian! So what's going on here?"
          }
        },
        {
            "name": "chat::meme::processing::chat_move_to_stroke",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Ready for one more example? Click the button when you're ready."
            }
        },
        {
            "name": "chat::meme::processing::chat_move_to_stroke::response",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "yes": {
                                "text": "Ready"
                            }
                        }
                    }
                },
                "responses": {
                    "yes": [
                        "chat::meme::processing::chat_stroke_code",
                        "chat::meme::processing::code_stroke",
                        "chat::meme::processing::chat_stroke_color",
                        "chat::meme::processing::chat_tweak_martian",
                        "chat::meme::processing::chat_move_to_stroke",
                        "processing::start-mission::yoursystem"
                    ]
                }
            }
        },
        {
            "name": "processing::start-mission::yoursystem",
            "type": "start-mission",
            "data": {
                "name": "yoursystem"
            }
        },      
        {
            "name": "chat::meme::processing::chat_stroke_code",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "The default \"stroke weight\" of our lines and circles is a single pixel, but this can be changed with the \"strokeWeight()\" function. The single parameter to \"strokeWeight()\" sets the width of drawn lines. For example, this code would make your Martian have a thicker head:"
            }
        },
        {
            "name": "chat::meme::processing::code_stroke",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "<span font_family='monospace'>stroke(8);   // thickens the Martian's head</span>"
            }
        },
        {
            "name": "chat::meme::processing::chat_stroke_color",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "You can also change the stroke color with the code \"stroke()\" inputting either one value (for grayscale mode) or three values (for RGB mode), making sure to input the appropriate parameters as described before."
            }
        },
        {
            "name": "chat::meme::processing::chat_tweak_martian",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Play around with your Martian, adjust its stroke weight, stroke color, or anything else you feel like changing."
            }
        },
        {
            "name": "chat::meme::processing::chat_move_to_stroke",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Congrats! You're well on your way to learning Processing! When you're ready to try something new, head to AVATAR2 and they'll direct you the next set of activities!"
            }
        },
        {
            "name": "processing::start-mission::yoursystem",
            "type": "start-mission",
            "data": {
                "name": "yoursystem"
            }
        },
        {
            "name": "chat::meme::yoursystem::find_etc",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Now it is time to find the system configuration files. They're known in oldspeak as 'Editable Text Configuration' files. What directory do you think we can find them in?"
            }
        },
        {
            "name": "chat::meme::yoursystem::find_etc::response",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "etc": {
                                "text": "/etc"
                            },
                            "usr": {
                                "text": "/usr"
                            },
                            "var": {
                                "text": "/var"
                            },
                            "boot": {
                                "text": "/boot"
                            }
                        }
                    }
                },
                "responses": {
                    "usr": [
                        "chat::meme::yoursystem::find_etc::again"
                    ],
                    "var": [
                        "chat::meme::yoursystem::find_etc::again"
                    ],
                    "boot": [
                        "chat::meme::yoursystem::find_etc::again"
                    ],
                    "etc": [
                        "chat::meme::yoursystem::find_etc::success",
                        "artifact::yoursystem::found_etc",
                        "chat::meme::yoursystem::find_logs",
                        "chat::meme::yoursystem::find_logs::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::yoursystem::find_etc::again",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Hmm, I don't see any text files in there."
            }
        },
        {
            "name": "chat::meme::yoursystem::find_etc::success",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Of course. 'Editable Text Configuration' files shortens down to 'etc'."
            }
        },
        {
            "name": "chat::meme::yoursystem::find_logs",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Now, where can you find your system logs"
            }
        },
        {
            "name": "artifact::yoursystem::found_etc",
            "type": "register-artifact",
            "data": {
                "name": "artifact::yoursystem::found_logs"
            }
        },
        {
            "name": "chat::meme::yoursystem::find_logs::challenge",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "etc": {
                                "text": "/etc"
                            },
                            "usr": {
                                "text": "/usr"
                            },
                            "var": {
                                "text": "/var"
                            },
                            "boot": {
                                "text": "/boot"
                            }
                        }
                    }
                },
                "responses": {
                    "usr": [
                        "chat::meme::yoursystem::find_logs::again"
                    ],
                    "var": [
                        "chat::meme::yoursystem::find_logs::success",
                        "artifact::yoursystem::found_logs",
                        "chat::meme::yoursystem::find_configs",
                        "chat::meme::yoursystem::find_configs::challenge"
                    ],
                    "boot": [
                        "chat::meme::yoursystem::find_logs::again"
                    ],
                    "etc": [
                        "chat::meme::yoursystem::find_logs::again"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::yoursystem::find_logs::again",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Nope, no logs here"
            }
        },
        {
            "name": "chat::meme::yoursystem::find_logs::success",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Sweet, all the logs are here. You can also use `journalctl` to view all the logs in one place."
            }
        },
        {
            "name": "artifact::yoursystem::found_logs",
            "type": "register-artifact",
            "data": {
                "name": "artifact::yoursystem::found_logs"
            }
        },
        {
            "name": "chat::meme::yoursystem::find_configs",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "There's lots of configuration files in your home directory. But they're all hiddden from view. Can you tell me in one character or less why that is?"
            }
        },
        {
            "name": "chat::meme::yoursystem::find_configs::challenge",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "yoursystem::find_configs"
                    }
                },
                "responses": {
                    "success": [
                        "chat::meme::yoursystem::find_configs::success",
                        "artifact::yoursystem::found_configs",
                        "yoursystem::start-mission::python"
                    ],
                    "failure": [
                        "chat::meme::yoursystem::find_configs::again",
                        "chat::meme::yoursystem::find_configs::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::yoursystem::find_configs::success",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "That's right! They all begin with a '.' so they are hidden. But you can unhide them. Why don't you try pressing Control-H in the File Manager and see what you find?"
            }
        },
        {
            "name": "chat::meme::yoursystem::find_configs::again",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Hmm, no it isn't quite that. They all start with one and it isn't a letter or an number. But it causes them to be hidden from view. Why not search the internet to find out what it is?"
            }
        },
        {
            "name": "artifact::yoursystem::found_configs",
            "type": "register-artifact",
            "data": {
                "name": "artifact::yoursystem::found_configs"
            }
        },
        {
            "name": "yoursystem::start-mission::python",
            "type": "start-mission",
            "data": {
                "name": "python"
            }
        },
        {
            "name": "chat::meme::showmehow_python",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Now that you've learned a bit about what runs your system and the files in your system, how about we start learning a programming language so that you can write your own programs? I've added a new lesson to showmehow to start exploring the Python programming language. Check it out."
            }
        },
        {
            "name": "python::setting::showmehow::add-python",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["python"]
                }
            }
        },
        {
            "name": "listen::showmehow_python::add_numbers",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-add-numbers",
                "received": [
                    "listen::showmehow_python::print_string",
                    "artifact::python::add_numbers"
                ]
            }
        },
        {
            "name": "artifact::python::add_numbers",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::add_numbers"
            }
        },
        {
            "name": "artifact::python::print_string",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::print_string"
            }
        },
        {
            "name": "artifact::python::string_format",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::string_format"
            }
        },
        {
            "name": "artifact::python::split_string",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::split_string"
            }
        },
        {
            "name": "artifact::python::join_string",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::join_string"
            }
        },
        {
            "name": "listen::showmehow_python::print_string",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-print-string",
                "received": [
                    "listen::showmehow_python::string_format",
                    "artifact::python::print_string"
                ]
            }
        },
        {
            "name": "listen::showmehow_python::string_format",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-string-format",
                "received": [
                    "listen::showmehow_python::split_string",
                    "artifact::python::string_format"
                ]
            }
        },
        {
            "name": "listen::showmehow_python::split_string",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-split-string",
                "received": [
                    "listen::showmehow_python::join_string",
                    "artifact::python::split_string"
                ]
            }
        },
        {
            "name": "listen::showmehow_python::join_string",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-join-string",
                "received": [
                    "showmehow_python::start-mission::python_functions",
                    "artifact::python::join_string"
                ]
            }
        },
        {
            "name": "showmehow_python::start-mission::python_functions",
            "type": "start-mission",
            "data": {
                "name": "python_functions"
            }
        },
        {
            "name": "chat::meme::python_functions::intro",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Now it is time to edit your first Python file. I'm going to send you something and you'll need to call the right functions in order to solve the problem I'm going to give you"
            }
        },
        {
            "name": "chat::meme::python_functions::enter_code",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Can you tell me what the output of this file is once you run it with the code: '5 2 8 4 9 1'?"
            }
        },
        {
            "name": "chat::meme::python_functions::intro::attachment",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Some functions",
                    "path": "functions.py"
                }
            }
        },
        {
            "name": "chat::meme::python_functions::challenge",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "python_functions::challenge"
                    }
                },
                "responses": {
                    "success": [
                        "chat::meme::python_functions::challenge::success",
                        "artifact::python_functions::found_answer",
                        "python_functions::start-mission::python_lists"
                    ],
                    "failure": [
                        "chat::meme::python_functions::challenge::again",
                        "chat::meme::python_functions::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::python_functions::challenge::success",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Correct! You put the functions together in the right away and got the right answer!"
            }
        },
        {
            "name": "chat::meme::python_functions::challenge::again",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Nope, wrong answer, try again."
            }
        },
        {
            "name": "artifact::python_functions::found_answer",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python_functions::found_answer"
            }
        },
        {
            "name": "python_functions::start-mission::python_lists",
            "type": "start-mission",
            "data": {
                "name": "python_lists"
            }
        },
        {
            "name": "chat::meme::python_lists::intro",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Now let's learn a bit more about what you can do with lists. Python has a concept of list comprehensions, which you should try out in the python_lists task in showmehow."
            }
        },
        {
            "name": "python::setting::showmehow::add-python-lists",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["python_lists"]
                }
            }
        },
        {
            "name": "listen::python_lists::convert_list",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-lists-convert-list",
                "received": [
                    "listen::python_lists::filter_list",
                    "artifact::python::convert_list"
                ]
            }
        },
        {
            "name": "artifact::python::convert_list",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::convert_list"
            }
        },
        {
            "name": "artifact::python::filter_list",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::filter_list"
            }
        },
        {
            "name": "artifact::python::dict_comprehension",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::dict_comprehension"
            }
        },
        {
            "name": "listen::python_lists::filter_list",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-filter-list",
                "received": [
                    "artifact::python::filter_list",
                    "listen::python_lists::dict_comprehension",
                    "python_lists::start-mission::python_classes"
                ]
            }
        },
        {
            "name": "listen::python_lists::dict_comprehension",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-dict-comprehension",
                "received": [
                    "artifact::python::dict_comprehension",
                    "listen::python_lists::dict_comprehension",
                    "python_lists::start-mission::python_classes"
                ]
            }
        },
        {
            "name": "python_lists::start-mission::python_classes",
            "type": "start-mission",
            "data": {
                "name": "python_classes"
            }
        },
        {
            "name": "chat::meme::python_classes::intro",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Another python file. This time, it is going to contain some classes and objects and you'll need to add the right methods to the class in order to get things to work."
            }
        },
        {
            "name": "chat::meme::python_classes::enter_code",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Can you tell me what the output of this file is once you implement the missing methods?"
            }
        },
        {
            "name": "chat::meme::python_classes::intro::attachment",
            "type": "chat-actor-attachment",
            "data": {
                "actor": "MEME",
                "attachment": {
                    "desc": "Some functions",
                    "path": "classes.py"
                }
            }
        },
        {
            "name": "chat::meme::python_classes::challenge",
            "type": "input-user",
            "data": {
                "actor": "MEME",
                "input": {
                    "type": "text",
                    "settings": {
                        "showmehow_id": "python_classes::challenge"
                    }
                },
                "responses": {
                    "success": [
                        "chat::meme::python_classes::challenge::success",
                        "artifact::python_classes::found_answer",
                        "python_classes::start-mission::showmehow_python_gi"
                    ],
                    "failure": [
                        "chat::meme::python_classes::challenge::again",
                        "chat::meme::python_classes::challenge"
                    ]
                }
            }
        },
        {
            "name": "chat::meme::python_classes::challenge::success",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Correct! You put the classes together and got the right answer!"
            }
        },
        {
            "name": "chat::meme::python_classes::challenge::again",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "Nope, wrong answer, try again."
            }
        },
        {
            "name": "artifact::python_classes::found_answer",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python_classes::found_answer"
            }
        },
        {
            "name": "python_classes::start-mission::showmehow_python_gi",
            "type": "start-mission",
            "data": {
                "name": "showmehow_python_gi"
            }
        },
        {
            "name": "python::setting::showmehow::add-python-gi",
            "type": "change-setting",
            "data": {
                "schema": "com.endlessm.showmehow",
                "key": "unlocked-lessons",
                "variant_type": "as",
                "value": {
                    "type": "append-to-list-unique",
                    "value": ["python_gi"]
                }
            }
        },
        {
            "name": "chat::meme::showmehow_python_gi::intro",
            "type": "chat-actor",
            "data": {
                "actor": "MEME",
                "message": "You can use almost any programming language (including python) to interact with lots of different components on your system. For instance, you can send notifications or even create new windows. Check out the 'python-gi' task I added to showmehow for more."
            }
        },
        {
            "name": "listen::showmehow_python_gi::create_gi_binding",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-gi-create-gi-binding",
                "received": [
                    "artifact::python::create_gi_binding",
                    "listen::showmehow_python_gi::instantiate_gi_class"
                ]
            }
        },
        {
            "name": "artifact::python::create_gi_binding",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::create_gi_binding"
            }
        },
        {
            "name": "artifact::python::instantiate_gi_class",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::instantiate_gi_class"
            }
        },
        {
            "name": "artifact::python::send_gnotification",
            "type": "register-artifact",
            "data": {
                "name": "artifact::python::send_gnotification"
            }
        },
        {
            "name": "listen::showmehow_python_gi::instantiate_gi_class",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-gi-instantiate-gi-class",
                "received": [
                    "artifact::python::instantiate_gi_class",
                    "listen::showmehow_python_gi::send_gnotification"
                ]
            }
        },
        {
            "name": "listen::showmehow_python_gi::send_gnotification",
            "type": "listen-event",
            "data": {
                "name": "showmehow-python-gi-send-gnotification",
                "received": [
                    "artifact::python::send_gnotification"
                ]
            }
        },
        {
            "name": "chat::change::where_to_go",
            "type": "chat-actor",
            "data": {
                "actor": "CHANGE",
                "message": "What would you like to do next?"
            }
        },
        {
            "name": "chat::change::where_to_go::input",
            "type": "input-user",
            "data": {
                "actor": "CHANGE",
                "input": {
                    "type": "choice",
                    "settings": {
                        "choices": {
                            "intro": {
                                "text": "Introduction"
                            },
                            "showmehow": {
                                "text": "Showmehow - Terminal"
                            },
                            "showmehow_python": {
                                "text": "Showmehow - Python"
                            },
                            "python_functions": {
                                "text": "Python Functions"
                            }
                        }
                    }
                },
                "responses": {
                    "intro": [
                        "start-mission::intro",
                        "chat::change::where_to_go",
                        "chat::change::where_to_go::input"
                    ],
                    "showmehow": [
                        "bashrc::start-mission::terminalintro",
                        "chat::change::where_to_go",
                        "chat::change::where_to_go::input"
                    ],
                    "showmehow_python": [
                        "yoursystem::start-mission::python",
                        "chat::change::where_to_go",
                        "chat::change::where_to_go::input"
                    ],
                    "python_functions": [
                        "showmehow_python::start-mission::python_functions",
                        "chat::change::where_to_go",
                        "chat::change::where_to_go::input"
                    ]
                }
            }
        }
    ]
}
